module Console.Types where

import Prelude

import Signal.Channel
import Data.Lens

data Action
    = Add String
    | Send String
    | NoOp

data State = State
    { _buffer :: String
    , _consoleChannel :: Channel Action
    }

-- Autogenerated lens for buffer
buffer :: Lens' State String
buffer = lens
    (\(State o) -> o._buffer)
    (\(State o) -> (\newValue -> State (o { _buffer = newValue } ) ) )

-- Autogenerated lens for consoleChannel 
consoleChannel  :: Lens' State (Channel Action)
consoleChannel  = lens
    (\(State o) -> o._consoleChannel )
    (\(State o) -> (\newValue -> State (o { _consoleChannel  = newValue } ) ) )